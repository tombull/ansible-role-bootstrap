---
- include: manage_known_hosts.yml

- include: check_login.yml

- name: Wait for the host to be available by SSH
  wait_for:
    port: "{{ ansible_port | default('22') }}"
    host: '{{ ansible_host | default(inventory_hostname) }}'
  delegate_to: localhost
  become: no
  when:
    - ansible_connection is defined
    - ansible_connection != "docker"
    - bootstrap_wait_for_host | bool

- name: Test connection to host including python, otherwise register package manager
  block:
    - name: Test connection to host including python (allowed to fail)
      wait_for_connection:
        timeout: '{{ bootstrap_timeout }}'
      register: bootstrap_connect
      changed_when: no

  rescue:
    - name: Register package manager
      include_tasks: register.yml

    - name: Install packages using registered package manager
      include_tasks: install.yml
      when: bootstrap_has_package_manager

    - name: Install python if there is no registered package manager
      include_tasks: install_no_package_manager.yml
      when: not bootstrap_has_package_manager

- name: Gather facts
  setup:
    gather_subset: all
  become: no

- name: Ensure package manager is updated
  action: >
    {{ ansible_pkg_mgr }} update_cache=yes
  become: yes
  register: bootstrap_package_manager_update_cache
  until: bootstrap_package_manager_update_cache is succeeded
  retries: 3
  when: ansible_pkg_mgr != 'unknown'

- name: Ensure all bootstrap_packages are installed
  package:
    name: '{{ item }}'
    state: present
  with_items: '{{ bootstrap_facts_packages.split() }}'
  register: bootstrap_install_bootstrap_facts_packages
  until: bootstrap_install_bootstrap_facts_packages is succeeded
  retries: 3
  become: yes
  when:
    - ansible_pkg_mgr != 'unknown'
    - ansible_pkg_mgr != 'atomic_container'
